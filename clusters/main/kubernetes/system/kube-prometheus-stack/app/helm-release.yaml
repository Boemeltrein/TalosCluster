---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: kube-prometheus-stack
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 79.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    crds:
      enabled: true
      upgradeJob:
        enabled: true
        forceConflicts: true
    
    alertmanager:
      enabled: false

    grafana:
      enabled: false
      forceDeployDatasources: true
      forceDeployDashboards: true
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: Europe/Amsterdam

    kubeEtcd:
      service:
        port: 2379
        targetPort: 2379
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
      serviceMonitor:
        scheme: https
        insecureSkipVerify: false
        serverName: "localhost"
        caFile: "/etc/prometheus/secrets/etcd-client-cert/etcd-ca.crt"
        certFile: "/etc/prometheus/secrets/etcd-client-cert/etcd-client.crt"
        keyFile: "/etc/prometheus/secrets/etcd-client-cert/etcd-client-key.key"

    kubeProxy:
      enabled: false

    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      collectors:
        - certificatesigningrequests
        - configmaps
        - cronjobs
        - daemonsets
        - deployments
        #- endpoints
        - endpointslices
        - horizontalpodautoscalers
        - ingresses
        - jobs
        - leases
        - limitranges
        - mutatingwebhookconfigurations
        - namespaces
        - networkpolicies
        - nodes
        - persistentvolumeclaims
        - persistentvolumes
        - poddisruptionbudgets
        - pods
        - replicasets
        - replicationcontrollers
        - resourcequotas
        - secrets
        - services
        - statefulsets
        - storageclasses
        - validatingwebhookconfigurations
        - volumeattachments
        # - ingressclasses
        # - clusterrolebindings
        # - clusterroles
        # - roles      
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    prometheusOperator:
      revisionHistoryLimit: 3
      ## Create Endpoints objects for kubelet targets.
      kubeletEndpointsEnabled: false
      ## Create EndpointSlice objects for kubelet targets.
      kubeletEndpointSliceEnabled: true

    prometheus:
      prometheusSpec:
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        serviceDiscoveryRole: EndpointSlice
        enableFeatures:
          - memory-snapshot-on-shutdown
        retention: 14d
        retentionSize: 50GB
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
          limits:
            memory: 2000Mi
        secrets:
          - etcd-client-cert
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: cloudflare
          cert-manager.io/private-key-rotation-policy: Always
        hosts:
          - prometheus.${BASE_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - secretName: prometheus-general-tls
            hosts:
              - prometheus.${BASE_DOMAIN}

    cleanPrometheusOperatorObjectNames: true
